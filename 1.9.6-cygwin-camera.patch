--- origsrc/pygame-1.9.6/src_c/_camera.c	2019-04-25 02:14:17.000000000 -0400
+++ src/pygame-1.9.6/src_c/_camera.c	2019-05-12 23:38:05.496075000 -0400
@@ -38,7 +38,7 @@
 #include "pgcompat.h"
 
 /*
-#if defined(__unix__) || !defined(__APPLE__)
+#if defined(__linux__) || !defined(__APPLE__)
 #else
     #define V4L2_PIX_FMT_RGB24 1
     #define V4L2_PIX_FMT_RGB444 1
@@ -146,7 +146,7 @@ surf_colorspace(PyObject *self, PyObject
 PyObject *
 list_cameras(PyObject *self, PyObject *arg)
 {
-#if defined(__unix__) || defined(PYGAME_MAC_CAMERA_OLD)
+#if defined(__linux__) || defined(PYGAME_MAC_CAMERA_OLD)
     PyObject *ret_list;
     PyObject *string;
     char **devices;
@@ -158,7 +158,7 @@ list_cameras(PyObject *self, PyObject *a
     if (!ret_list)
         return NULL;
 
-#if defined(__unix__)
+#if defined(__linux__)
     devices = v4l2_list_cameras(&num_devices);
 #elif defined(PYGAME_MAC_CAMERA_OLD)
     devices = mac_list_cameras(&num_devices);
@@ -182,7 +182,7 @@ list_cameras(PyObject *self, PyObject *a
 PyObject *
 camera_start(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     if (v4l2_open_device(self) == 0) {
         v4l2_close_device(self);
         return NULL;
@@ -212,7 +212,7 @@ camera_start(pgCameraObject *self, PyObj
 PyObject *
 camera_stop(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     if (v4l2_stop_capturing(self) == 0)
         return NULL;
     if (v4l2_uninit_device(self) == 0)
@@ -233,7 +233,7 @@ camera_stop(pgCameraObject *self, PyObje
 PyObject *
 camera_get_controls(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     int value;
     if (v4l2_get_control(self->fd, V4L2_CID_HFLIP, &value))
         self->hflip = value;
@@ -258,7 +258,7 @@ camera_get_controls(pgCameraObject *self
 PyObject *
 camera_set_controls(pgCameraObject *self, PyObject *arg, PyObject *kwds)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     int hflip = 0, vflip = 0, brightness = 0;
     char *kwids[] = {"hflip", "vflip", "brightness", NULL};
 
@@ -271,7 +271,7 @@ camera_set_controls(pgCameraObject *self
                                      &brightness))
         return NULL;
 
-    /* #if defined(__unix__)         */
+    /* #if defined(__linux__)         */
     if (v4l2_set_control(self->fd, V4L2_CID_HFLIP, hflip))
         self->hflip = hflip;
 
@@ -311,7 +311,7 @@ camera_set_controls(pgCameraObject *self
 PyObject *
 camera_get_size(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     return Py_BuildValue("(ii)", self->width, self->height);
 #elif defined(PYGAME_MAC_CAMERA_OLD)
     return Py_BuildValue("(ii)", self->boundsRect.right,
@@ -324,7 +324,7 @@ camera_get_size(pgCameraObject *self, Py
 PyObject *
 camera_query_image(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     return PyBool_FromLong(v4l2_query_buffer(self));
 #endif
     Py_RETURN_TRUE;
@@ -335,7 +335,7 @@ camera_query_image(pgCameraObject *self,
 PyObject *
 camera_get_image(pgCameraObject *self, PyObject *arg)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     SDL_Surface *surf = NULL;
     PyObject *surfobj = NULL;
 
@@ -421,7 +421,7 @@ camera_get_image(pgCameraObject *self, P
 PyObject *
 camera_get_raw(pgCameraObject *self, PyObject *args)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     return v4l2_read_raw(self);
 #elif defined(PYGAME_MAC_CAMERA_OLD)
     return mac_read_raw(self);
@@ -1780,7 +1780,7 @@ PyTypeObject pgCamera_Type = {
 PyObject *
 Camera(pgCameraObject *self, PyObject *arg)
 {
-#if defined(__unix__)
+#if defined(__linux__)
     int w, h;
     char *dev_name = NULL;
     char *color = NULL;
--- origsrc/pygame-1.9.6/src_c/camera.h	2019-04-25 02:14:17.000000000 -0400
+++ src/pygame-1.9.6/src_c/camera.h	2019-05-12 23:38:26.055294700 -0400
@@ -20,7 +20,7 @@
 #include "pygame.h"
 #include "doc/camera_doc.h"
 
-#if defined(__unix__)
+#if defined(__linux__)
     #include <structmember.h>
     #include <stdio.h>
     #include <stdlib.h>
@@ -83,7 +83,7 @@ struct buffer {
     size_t length;
 };
 
-#if defined(__unix__)
+#if defined(__linux__)
 typedef struct pgCameraObject {
     PyObject_HEAD
     char* device_name;
@@ -159,7 +159,7 @@ void yuv420_to_rgb (const void* src, voi
 void yuv420_to_yuv (const void* src, void* dst, int width, int height,
                     SDL_PixelFormat* format);
 
-#if defined(__unix__)
+#if defined(__linux__)
 /* internal functions specific to v4l2 */
 char** v4l2_list_cameras (int* num_devices);
 int v4l2_get_control (int fd, int id, int *value);
--- origsrc/pygame-1.9.6/src_c/camera_v4l2.c	2019-04-25 02:14:17.000000000 -0400
+++ src/pygame-1.9.6/src_c/camera_v4l2.c	2019-05-12 23:38:38.338051400 -0400
@@ -17,7 +17,7 @@
 
 */
 
-#if defined(__unix__)
+#if defined(__linux__)
 
 #include "_camera.h"
 #include "pgcompat.h"
